{"version":3,"sources":["App.js","User.js","Notfound.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","App_Form","history","this","props","tagline","label1","label2","Component","Form","event","preventDefault","username","refs","value","password","toLowerCase","localStorage","key","setItem","push","alert","id","onSubmit","goToUserPage","bind","className","name","type","ref","required","Select","e","data","store","getItem","selected","Carousal_Count","onChange","clicked","default","hidden","Carousal","data-ride","href","role","data-slide","aria-hidden","Modal","_ref","handleClose","show","children","s","onClick","Finish","state","localdata","showModal","_this2","setState","hideModal","User_Modal","Boolean","window","location","hostname","match","console","log","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51b0cf68.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Form history={this.props.history} tagline=\"Login\" label1=\"username\" label2=\"password\"></Form>\n    );\n  }\n}\n\nclass Form extends Component {\n\n  goToUserPage(event){\n      event.preventDefault();\n      let username = this.refs.username.value;\n      const password = this.refs.password.value;\n      username = username.toLowerCase();\n      if(username === 'shaadi' && password === '123'){\n        if(localStorage.key(username) !== username){\n          localStorage.setItem(username,'');\n      }\n        this.props.history.push('/user/'+username);\n    }\n    else{\n      alert('username:shaadi,password:123');\n    }\n    }\n\n\n  render() {\n    return (\n\n      <div id=\"app_root\">\n        <form onSubmit={this.goToUserPage.bind(this)} className=\"row login-form\" name=\"myForm\">\n          <h1>{this.props.tagline}</h1>\n          <label>{this.props.label1}:</label>\n          <input type=\"text\" ref={this.props.label1} name={this.props.label1} required/>\n          <label>{this.props.label2}:</label>\n          <input type=\"password\" ref={this.props.label2} name={this.props.label2} required/>\n          <button className=\"button-signin\" type=\"submit\" value=\"Sign In\">Sign In</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport './User.css';\n\n\nclass User extends Component {\n\n    state = {\n        user:this.props.match.params.user,\n        carousal_count:'',\n    };\n\n    Carousal_Count(data){\n        this.setState({carousal_count:data},function(){\n            document.getElementById('test').innerHTML = '';\n                for(var i=1;i<=this.state.carousal_count;i++){\n                    var className = (i === Number(this.state.carousal_count)) ? \"carousel-item active\" : \"carousel-item\";\n                    document.getElementById('test').innerHTML += '<div class=\"'+className+'\"><div class=\"img\"><p>'+i+'</p></div></div>';\n                }\n            });\n\n    }\n\n    render() {\n      return (\n        <div id=\"User_root\">\n        <div id=\"modal\"></div>\n        <Select Carousal_Count={this.Carousal_Count.bind(this)} data={this.state.user}></Select>\n        <Carousal send={this.state.user}></Carousal>\n        <Finish data={this.state.user}></Finish>\n        </div>\n      );\n    }\n  }\n\nclass Select extends Component{\n\n      clicked(e){\n        if(this.props.data === localStorage.key(this.props.data)){\n        let store = localStorage.getItem(this.props.data);\n        if(store!==''){\n        store = store + \",\" + this.refs.selected.value;}\n        else{\n            store = this.refs.selected.value;\n        }\n        localStorage.setItem(this.props.data,store);\n        this.props.Carousal_Count(this.refs.selected.value);\n        }\n      }\n\n      render(){\n          return(\n            <div id=\"dropdown-container\">\n            <select ref=\"selected\" className=\"custom-select\" onChange={this.clicked.bind(this)}>\n                <option default hidden>select the number of slides in carousal</option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n                <option value=\"6\">6</option>\n                <option value=\"7\">7</option>\n                <option value=\"8\">8</option>\n                <option value=\"9\">9</option>\n                <option value=\"10\">10</option>\n                <option value=\"11\">11</option>\n                <option value=\"12\">12</option>\n                <option value=\"13\">13</option>\n                <option value=\"14\">14</option>\n                <option value=\"15\">15</option>\n                <option value=\"16\">16</option>\n                <option value=\"17\">17</option>\n                <option value=\"18\">18</option>\n                <option value=\"19\">19</option>\n                <option value=\"20\">20</option>\n            </select>\n            </div>\n          );\n      }\n  }\n\nclass Carousal extends Component{\n\n    render(){\n        return(\n            <div className=\"row carousal-container\">\n                <div id=\"carouselExampleControls\" className=\"carousel\" data-ride=\"carousel\">\n                    <div id=\"test\" className=\"carousel-inner\">\n                    <p className=\"carousal-text\">carousel</p>\n                    </div>\n                    <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"prev\">\n                        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Previous</span>\n                    </a>\n                    <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-slide=\"next\">\n                        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                        <span className=\"sr-only\">Next</span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Modal = ({ handleClose, show, children }) => {\n\n    const s = show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n      <div className={s}>\n        <section className=\"modal-main\">\n          {children}\n          <button className=\"button-close\" onClick={handleClose}>close</button>\n        </section>\n      </div>\n    );\n  };\n\nclass Finish extends Component{\n\n    state = { show: false,localdata:\"you are not logged in\"};\n\n    showModal = (event) => {\n      event.preventDefault();\n      if(localStorage.key(this.props.data)===this.props.data){\n          if(localStorage.getItem(this.props.data))\n          this.setState({localdata:localStorage.getItem(this.props.data)});\n          else{\n              this.setState({localdata:'you haven\\'t selected any number'});\n          }\n      }\n\n    this.setState({ show: true });\n    };\n\n    hideModal = () => {\n        this.setState({ show: false });\n    };\n\n    render(){\n        return(\n            <div id=\"finishButton\">\n            <Modal show={this.state.show} handleClose={this.hideModal}>\n                <span>{this.state.localdata}</span>\n            </Modal>\n            <form onSubmit={this.showModal}>\n                {/* <button ref=\"finish\" type=\"submit\" className=\"btn\">Finish</button> */}\n                <button ref=\"finish\" className=\"button-signin finish\" type=\"submit\" value=\"Finish\">Finish</button>\n            </form>\n            </div>\n        );\n    }\n}\n\n  export default User;\n\n","import React, { Component } from 'react';\nimport './Notfound.css';\n\nclass Notfound extends Component {\n    render() {\n      return (\n        <div id=\"Notfound_root\">\n        <div><h1>Notfound</h1></div>\n        </div>\n      );\n    }\n  }\n\n  export default Notfound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Route ,Switch} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport './index.css';\nimport App from './App';\nimport User from './User';\nimport Notfound from './Notfound';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log('%c WELCOME TO THE CONSOLE LOG', 'font-style:italic;font-weight:bold;font-size:40px;color: white; display: block;');\nconsole.log('%c username:shaadi', 'font-style:italic;font-weight:bold;font-size:40px;background: navy; color: white; display: block;');\nconsole.log('%c password:123', 'font-style:italic;font-weight:bold;font-size:40px;background: navy; color: white; display: block;');\n\n// var routes = (\n//   <Router history={createBrowserHistory()}>\n//     <Switch>\n//       <Route exact path=\"/\" component={App} />\n//       <Route exact path=\"/user/:user\" component={User} />\n//       <Route exact path=\"*\" component={Notfound} />\n//     </Switch>\n//   </Router>\n//   )\n\n  // ReactDOM.render(routes, document.getElementById('root'));\n  ReactDOM.render(<App/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}